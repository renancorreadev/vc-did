### =======================================================
### FLUXO COMPLETO - CONTRATO IDBRA DID REGISTRY
### Teste de Endereços com Novo Contrato Unificado
### =======================================================

### 1. Importar wallet administrativa no sistema (usando variável de ambiente)
POST http://147.93.11.54:8082/api/wallets/import-admin

### ========================================
### 2. CRIAÇÃO DE WALLET - BASE PARA OPERAÇÕES
### ========================================

### 2.1 Criar wallet principal para testes
# @name createMainWallet
POST http://147.93.11.54:8082/api/wallets?name=WalletEndereco&description=Wallet para Endereço
Content-Type: application/json

###

### 2.2 Verificar wallet criada
# @name checkMainWallet
GET http://147.93.11.54:8082/api/wallets/{{createMainWallet.response.body.address}}

###

### 2.3 Verificar se wallet tem ISSUER_ROLE
# @name checkIssuerRole
GET http://147.93.11.54:8082/api/blockchain/check-role/{{createMainWallet.response.body.address}}

###

### 2.4 Verificar se wallet tem DEFAULT_ADMIN_ROLE
# @name checkAdminRole
GET http://147.93.11.54:8082/api/blockchain/check-admin-role/{{createMainWallet.response.body.address}}

###

### 2.5 Conceder ISSUER_ROLE para a wallet (se necessário)
# @name grantIssuerRole
POST http://147.93.11.54:8082/api/blockchain/grant-issuer-role/{{createMainWallet.response.body.address}}

###

### 2.6 Verificar novamente se wallet tem ISSUER_ROLE após concessão
# @name checkIssuerRoleAfterGrant
GET http://147.93.11.54:8082/api/blockchain/check-role/{{createMainWallet.response.body.address}}

###

### ========================================
### 3. GERENCIAMENTO DE DID - NOVA FUNCIONALIDADE
### ========================================

### 3.1 Criar DID para o cidadão
# @name createCitizenDID
POST http://147.93.11.54:8082/api/blockchain/did/create
Content-Type: application/x-www-form-urlencoded

identity={{createMainWallet.response.body.address}}&didDocument={"@context":["https://www.w3.org/ns/did/v1"],"id":"did:ethr:{{createMainWallet.response.body.address}}","verificationMethod":[{"id":"did:ethr:{{createMainWallet.response.body.address}}#controller","type":"EcdsaSecp256k1VerificationKey2019","controller":"did:ethr:{{createMainWallet.response.body.address}}","ethereumAddress":"{{createMainWallet.response.body.address}}"}]}

###

# ### 3.2 Verificar status KYC inicial (DID exists não está implementado ainda)
# # @name checkInitialKYC
# GET http://147.93.11.54:8082/api/blockchain/kyc/{{createMainWallet.response.body.address}}

# ###

# ### 3.3 Definir status KYC como verificado
# # @name setKYCVerified
# POST http://147.93.11.54:8082/api/blockchain/kyc/{{createMainWallet.response.body.address}}
# Content-Type: application/x-www-form-urlencoded

# verified=true

###

# ### 3.4 Verificar status KYC após verificação
# # @name checkKYCAfterVerification
# GET http://147.93.11.54:8082/api/blockchain/kyc/{{createMainWallet.response.body.address}}

###

### ========================================
### 4. CRIAÇÃO DE STATUS LIST - BASE PARA CREDENCIAIS
### ========================================

### 4.1 Criar StatusList para endereços
# @name createStatusList
POST http://147.93.11.54:8082/api/statuslist?listId=endereco-001&uri=https://idbra.example/status/endereco-001.json&purpose=revocation&issuer=did:web:idbra.gov.br&issuerWalletAddress={{createMainWallet.response.body.address}}

###

### 4.2 Verificar StatusList criada
# @name checkStatusList
GET http://147.93.11.54:8082/api/statuslist/endereco-001

###

### 4.3 Verificar metadados da StatusList
# @name checkStatusListMetadata
GET http://147.93.11.54:8082/api/statuslist/endereco-001/metadata

###

### ========================================
### 5. EMISSÃO DE CREDENCIAL - TESTE PRINCIPAL
### ========================================

### 5.1 Criar credencial verificável
# @name createCredential
POST http://147.93.11.54:8082/api/credentials
Content-Type: application/json

{
  "issuerDid": "did:web:idbra.gov.br",
  "holderDid": "did:ethr:{{createMainWallet.response.body.address}}",
  "credentialType": "AddressData",
  "credentialSubject": {
    "id": "did:ethr:{{createMainWallet.response.body.address}}",
    "address": {
      "street": "Avenida Paulista",
      "number": "1000",
      "complement": "Apto 123",
      "neighborhood": "Bela Vista",
      "city": "São Paulo",
      "state": "SP",
      "zipCode": "01310-100",
      "country": "Brasil",
      "type": "Residencial",
      "verificationDate": "2024-03-15"
    }
  },
  "expiresAt": "2029-06-15T06:00:00",
  "statusListId": "endereco-001",
  "issuerWalletAddress": "{{createMainWallet.response.body.address}}"
}

###

### 5.2 Verificar credencial criada
# @name checkCredential
GET http://147.93.11.54:8082/api/credentials/{{createCredential.response.body.credentialId}}

###

### ========================================
### 6. VERIFICAÇÃO DE CREDENCIAL - VALIDAÇÃO
### ========================================

### 6.1 Verificar credencial com JWT
# @name verifyCredential
POST http://147.93.11.54:8082/api/credentials/verify
Content-Type: text/plain

{{createCredential.response.body.jwt}}

###

### 6.2 Verificar StatusList após emissão
# @name checkStatusListAfterIssue
GET http://147.93.11.54:8082/api/statuslist/endereco-001/metadata

###

### ========================================
### 7. GERENCIAMENTO DE DELEGADOS - PREPARAÇÃO
### ========================================

### 7.1 Criar wallet para delegado
# @name createDelegateWallet
POST http://147.93.11.54:8082/api/wallets?name=WalletDelegate&description=Wallet Delegado
Content-Type: application/json

###

### 7.2 Conceder ISSUER_ROLE para wallet delegado
# @name grantDelegateIssuerRole
POST http://147.93.11.54:8082/api/blockchain/grant-issuer-role/{{createDelegateWallet.response.body.address}}

###

### ========================================
### 8. REVOGAÇÃO DE CREDENCIAL - TESTE DE REVOGAÇÃO
### ========================================

### 8.1 Revogar credencial
# @name revokeCredential
POST http://147.93.11.54:8082/api/credentials/{{createCredential.response.body.credentialId}}/revoke

###

### 8.2 Verificar credencial revogada
# @name verifyRevokedCredential
POST http://147.93.11.54:8082/api/credentials/verify
Content-Type: text/plain

{{createCredential.response.body.jwt}}

###

### 8.3 Verificar StatusList após revogação
# @name checkStatusListAfterRevoke
GET http://147.93.11.54:8082/api/statuslist/endereco-001/metadata

###

### ========================================
### 9. OPERAÇÕES DE CONSULTA - VERIFICAÇÃO DE DADOS
### ========================================

### 9.1 Listar todas as credenciais
# @name listAllCredentials
GET http://147.93.11.54:8082/api/credentials

###

### 9.2 Listar credenciais por emissor
# @name listCredentialsByIssuer
GET http://147.93.11.54:8082/api/credentials/issuer/did:web:idbra.gov.br

###

### 9.3 Listar credenciais por holder
# @name listCredentialsByHolder
GET http://147.93.11.54:8082/api/credentials/holder/did:ethr:{{createMainWallet.response.body.address}}

###

### 9.4 Listar credenciais por status
# @name listCredentialsByStatus
GET http://147.93.11.54:8082/api/credentials/status/REVOKED

###

### ========================================
### 10. MÉTRICAS DO SISTEMA - NOVA FUNCIONALIDADE
### ========================================

### 10.1 Obter métricas do sistema
# @name getSystemMetrics
GET http://147.93.11.54:8082/api/blockchain/metrics

###

### ========================================
### 11. OPERAÇÕES DE STATUS LIST - GERENCIAMENTO
### ========================================

### 11.1 Listar todas as StatusLists
# @name listAllStatusLists
GET http://147.93.11.54:8082/api/statuslist

###

### 11.2 Obter StatusList como JSON
# @name getStatusListJson
GET http://147.93.11.54:8082/api/statuslist/endereco-001/json

###

### 11.3 Verificar status de uma credencial específica
# @name checkCredentialStatus
GET http://147.93.11.54:8082/api/statuslist/endereco-001/status/0

###

### ========================================
### 12. OPERAÇÕES DE WALLET - GERENCIAMENTO
### ========================================

### 12.1 Listar todas as wallets
# @name listAllWallets
GET http://147.93.11.54:8082/api/wallets

###

### 12.2 Verificar saldo da wallet principal
# @name checkWalletBalance
GET http://147.93.11.54:8082/api/wallets/{{createMainWallet.response.body.address}}/balance

###

### 12.3 Verificar saldo da wallet delegado
# @name checkDelegateWalletBalance
GET http://147.93.11.54:8082/api/wallets/{{createDelegateWallet.response.body.address}}/balance

###

### 12.4 Obter credenciais da wallet (com senha mestra)
# @name getWalletCredentials
GET http://147.93.11.54:8082/api/wallets/{{createMainWallet.response.body.address}}/credentials/master
Content-Type: application/json

{
  "masterPassword": "custody_master_password_2024"
}

###

### ========================================
### 13. OPERAÇÕES ADMINISTRATIVAS - CONTROLE DO CONTRATO
### ========================================

### 13.1 Pausar contrato (apenas admin)
# @name pauseContract
POST http://147.93.11.54:8082/api/blockchain/pause

###

### 13.2 Verificar status após pausa
# @name checkStatusAfterPause
GET http://147.93.11.54:8082/api/blockchain/status

###

### 13.3 Despausar contrato (apenas admin)
# @name unpauseContract
POST http://147.93.11.54:8082/api/blockchain/unpause

###

### 13.4 Verificar status após despausar
# @name checkStatusAfterUnpause
GET http://147.93.11.54:8082/api/blockchain/status

###

### ========================================
### 14. TESTE DE INTEGRIDADE - VERIFICAÇÃO FINAL
### ========================================

### 14.1 Verificar saúde final
# @name finalHealthCheck
GET http://147.93.11.54:8082/actuator/health

###

### 14.2 Verificar status blockchain final
# @name finalBlockchainStatus
GET http://147.93.11.54:8082/api/blockchain/status

###

### 14.3 Verificar métricas finais do sistema
# @name finalSystemMetrics
GET http://147.93.11.54:8082/api/blockchain/metrics

###

### 14.4 Verificar metadados finais da StatusList
# @name finalStatusListMetadata
GET http://147.93.11.54:8082/api/statuslist/endereco-001/metadata

###

### ========================================
### 15. RESTAURAÇÃO DE CREDENCIAL - NOVA FUNCIONALIDADE
### ========================================

### 15.1 Restaurar credencial revogada (se suportado)
# @name restoreCredential
POST http://147.93.11.54:8082/api/credentials/{{createCredential.response.body.credentialId}}/restore

###

### 15.2 Verificar credencial após restauração
# @name verifyRestoredCredential
POST http://147.93.11.54:8082/api/credentials/verify
Content-Type: text/plain

{{createCredential.response.body.jwt}}

###
