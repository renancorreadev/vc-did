server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: custody-service
  profiles:
    active: dev

  # Configuração Redis (cache e persistência temporária)
  redis:
    host: localhost
    port: 6381  # ✅ Mudando de 6379 para 6381 para evitar conflito
    timeout: 2000ms
    database: 0

  # Configuração MongoDB (persistência principal)
  data:
    mongodb:
      uri: ${MONGO_URI:mongodb://admin:admin123@localhost:27017/custody?authSource=admin}
      database: ${MONGO_DATABASE:custody}
      username: ${MONGO_USERNAME:admin}
      password: ${MONGO_PASSWORD:admin123}
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}

  # Configuração Blockchain
  blockchain:
    besu:
      node-url: ${BESU_NODE_URL:http://144.22.179.183}
    web3j:
      chain-id: ${WEB3J_CHAIN_ID:1337}
      network-id: ${WEB3J_NETWORK_ID:1337}
    contracts:
      did-registry-address: ${DID_REGISTRY_ADDRESS:0x34c2AcC42882C0279A64bB1a4B1083D483BdE886}
    admin:
      private-key: ${ADMIN_PRIVATE_KEY:8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63}

web3:
  node:
    url: ${BESU_NODE_URL:http://144.22.179.183}
  chain:
    id: ${BESU_CHAIN_ID:1337}
  wallet:
    keystore:
      path: ${WALLET_KEYSTORE_PATH:}
    password: ${WALLET_PASSWORD:}

web3j:
  client-address: ${BESU_NODE_URL:http://144.22.179.183:8545}
  chain-id: ${WEB3J_CHAIN_ID:1337}
  network-id: ${WEB3J_NETWORK_ID:1337}

# Configuração dos Smart Contracts
blockchain:
  did-registry-address: ${DID_REGISTRY_ADDRESS:0x8553c57aC9a666EAfC517Ffc4CF57e21d2D3a1cb}
  status-list-manager-address: ${STATUS_LIST_MANAGER_ADDRESS:0x93a284C91768F3010D52cD37f84f22c5052be40b}
  network:
    chain-id: ${BLOCKCHAIN_CHAIN_ID:1337}
    rpc-url: ${BLOCKCHAIN_RPC_URL:http://144.22.179.183:8545}

# Configurações de criptografia
crypto:
  master:
    password: ${CRYPTO_MASTER_PASSWORD:defaultMasterPassword123!}
  algorithm: AES
  key:
    length: 256
  iterations: 65536

logging:
  level:
    br.com.idhub.custody: DEBUG
    org.web3j: INFO
    org.springframework.web: DEBUG
    org.springframework.data.redis: DEBUG
    org.springframework.data.mongodb: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always
