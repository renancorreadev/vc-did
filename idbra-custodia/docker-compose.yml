services:
  custody-service:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: custody-service-dev
    ports:
      - "8082:8080"
      - "35729:35729"  # Porta para LiveReload
    environment:
      # Blockchain Configuration
      - BESU_NODE_URL=${BESU_NODE_URL:-http://144.22.179.183}
      - WEB3J_CHAIN_ID=${WEB3J_CHAIN_ID:-1337}
      - WEB3J_NETWORK_ID=${WEB3J_NETWORK_ID:-1337}

      # Smart Contract Addresses
      - DID_REGISTRY_ADDRESS=${DID_REGISTRY_ADDRESS:-0x34c2AcC42882C0279A64bB1a4B1083D483BdE886}

      # Blockchain Network Configuration
      - BLOCKCHAIN_CHAIN_ID=${BLOCKCHAIN_CHAIN_ID:-1337}
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL:-http://144.22.179.183}
      - ADMIN_PRIVATE_KEY=${ADMIN_PRIVATE_KEY:-8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63}

      # Application Configuration
      - SPRING_PROFILES_ACTIVE=dev
      - JAVA_OPTS=-Xmx1g -Xms512m

      # Crypto Configuration
      - CRYPTO_MASTER_PASSWORD=${CRYPTO_MASTER_PASSWORD:-custody_master_password_2024}

      # MongoDB Configuration
      - MONGO_URI=${MONGO_URI:-mongodb://admin:admin123@mongodb:27017/custody?authSource=admin}
      - MONGO_DATABASE=${MONGO_DATABASE:-custody}
      - MONGO_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
    volumes:
      - ./src:/app/src
      - maven-repo:/home/custody/.m2
    networks:
      - custody-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy

  redis:
    image: redis:7-alpine
    container_name: redis-dev
    ports:
      - "6381:6379"  # âœ… Mudando de 6380 para 6381 para evitar conflito
    volumes:
      - redis-data:/data
    networks:
      - custody-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  mongodb:
    image: mongo:7.0
    container_name: mongodb-dev
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin123}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE:-custody}
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - custody-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
  mongodb-data:
  maven-repo:

networks:
  custody-network:
    driver: bridge
