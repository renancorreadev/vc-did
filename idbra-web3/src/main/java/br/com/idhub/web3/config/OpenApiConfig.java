package br.com.idhub.web3.config;

import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Contact;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.info.License;
import io.swagger.v3.oas.models.servers.Server;
import io.swagger.v3.oas.models.tags.Tag;
import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.security.SecurityScheme;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.util.List;

@Configuration
public class OpenApiConfig {

        @Bean
        public OpenAPI customOpenAPI() {
                return new OpenAPI()
                                .info(new Info()
                                                .title("üöÄ IDBra Web3 Service API")
                                                .description("""
                                                                ## üåü **Servi√ßo Centralizado de Blockchain Hyperledger Besu**

                                                                O **IDBra Web3 Service** √© o cora√ß√£o da infraestrutura blockchain da IDBra, respons√°vel por todas as intera√ß√µes com a rede Hyperledger Besu e smart contracts DID.

                                                                ### üéØ **Arquitetura e Prop√≥sito**
                                                                Este microservi√ßo centraliza toda a l√≥gica de blockchain, permitindo que outros servi√ßos (custody, issuer, holder, verifier) se comuniquem de forma padronizada com a rede distribu√≠da.

                                                                ### üîß **Funcionalidades Principais**

                                                                #### **üîê Gest√£o de Identidades (DID)**
                                                                - Cria√ß√£o e atualiza√ß√£o de DIDs (Decentralized Identifiers)
                                                                - Verifica√ß√£o de exist√™ncia e valida√ß√£o de identidades
                                                                - Gest√£o de documentos DID na blockchain

                                                                #### **üë• Controle de Acesso (RBAC)**
                                                                - Sistema de roles baseado em smart contracts
                                                                - Concess√£o e revoga√ß√£o de permiss√µes
                                                                - Verifica√ß√£o de autoriza√ß√µes em tempo real

                                                                #### **üìú Gest√£o de Credenciais**
                                                                - Emiss√£o e revoga√ß√£o de credenciais verific√°veis
                                                                - Controle de status e validade
                                                                - Sistema de revoga√ß√£o distribu√≠da

                                                                #### **üîó Gest√£o de Delegados**
                                                                - Adi√ß√£o e remo√ß√£o de representantes
                                                                - Controle de permiss√µes tempor√°rias
                                                                - Valida√ß√£o de autoriza√ß√µes

                                                                #### **üìä Monitoramento e M√©tricas**
                                                                - Status da conex√£o blockchain
                                                                - M√©tricas de opera√ß√µes e transa√ß√µes
                                                                - Health checks da infraestrutura

                                                                ### üåê **Endpoints Organizados por Categoria**

                                                                | Categoria | Endpoints | Descri√ß√£o |
                                                                |-----------|-----------|-----------|
                                                                | **üîê Roles** | `/api/blockchain/roles/*` | Gest√£o de permiss√µes e autoriza√ß√µes |
                                                                | **üÜî DIDs** | `/api/blockchain/did/*` | Opera√ß√µes com identidades descentralizadas |
                                                                | **üë• Delegados** | `/api/blockchain/delegate/*` | Gest√£o de representantes |
                                                                | **üìú Credenciais** | `/api/blockchain/credentials/*` | Emiss√£o e controle de credenciais |
                                                                | **üîç KYC** | `/api/blockchain/kyc/*` | Verifica√ß√£o de identidade |
                                                                | **‚öôÔ∏è Sistema** | `/api/blockchain/system/*` | Controle administrativo |
                                                                | **üìä M√©tricas** | `/api/blockchain/metrics` | Dados de monitoramento |

                                                                ### üîê **Autentica√ß√£o e Seguran√ßa**

                                                                **ADMIN_PRIVATE_KEY**: Chave privada administrativa necess√°ria para opera√ß√µes sens√≠veis.

                                                                ```bash
                                                                # Exemplo de configura√ß√£o
                                                                ADMIN_PRIVATE_KEY=8f2a55949038a9610f50fb23b5883af3b4ecb3c3bb792cbcefbd1542c692be63
                                                                ```

                                                                ### üöÄ **Como Usar**

                                                                1. **Configure as vari√°veis de ambiente** (veja `.env.example`)
                                                                2. **Acesse o Swagger UI** em `/swagger-ui.html`
                                                                3. **Teste os endpoints** diretamente na interface
                                                                4. **Integre com outros servi√ßos** via HTTP/REST

                                                                ### üìö **Recursos T√©cnicos**

                                                                - **Blockchain**: Hyperledger Besu (Ethereum-compatible)
                                                                - **Smart Contracts**: Solidity com padr√£o ERC-1484
                                                                - **Web3j**: Cliente Java para Ethereum
                                                                - **Redis**: Cache para transa√ß√µes pendentes
                                                                - **Spring Boot 3.2**: Framework base

                                                                ### üîó **Integra√ß√µes**

                                                                Este servi√ßo √© consumido por:
                                                                - **IDBra Custody Service** - Gest√£o de wallets
                                                                - **IDBra Issuer Service** - Emiss√£o de credenciais
                                                                - **IDBra Holder Service** - Armazenamento de credenciais
                                                                - **IDBra Verifier Service** - Verifica√ß√£o de credenciais

                                                                ---

                                                                **üìß Suporte**: dev@idbra.com | **üåê Website**: https://idbra.com
                                                                """)
                                                .version("2.0.0")
                                                .contact(new Contact()
                                                                .name("üöÄ IDBra Development Team")
                                                                .email("dev@idbra.com")
                                                                .url("https://idbra.com"))
                                                .license(new License()
                                                                .name("MIT License")
                                                                .url("https://opensource.org/licenses/MIT")))
                                .servers(List.of(
                                                new Server()
                                                                .url("http://localhost:8081")
                                                                .description("üñ•Ô∏è Servidor de Desenvolvimento Local"),
                                                new Server()
                                                                .url("https://dev-api.idbra.com")
                                                                .description("üß™ Servidor de Desenvolvimento"),
                                                new Server()
                                                                .url("https://staging-api.idbra.com")
                                                                .description("üîç Servidor de Staging"),
                                                new Server()
                                                                .url("https://api.idbra.com")
                                                                .description("üöÄ Servidor de Produ√ß√£o")))
                                .tags(List.of(
                                                new Tag().name("üîê Role Management").description(
                                                                "Gest√£o de permiss√µes e autoriza√ß√µes na blockchain"),
                                                new Tag().name("üÜî DID Management").description(
                                                                "Opera√ß√µes com Identidades Descentralizadas (DIDs)"),
                                                new Tag().name("üë• Delegate Management")
                                                                .description("Gest√£o de representantes e delegados"),
                                                new Tag().name("üìú Credential Management").description(
                                                                "Emiss√£o, revoga√ß√£o e controle de credenciais"),
                                                new Tag().name("üîç KYC Management").description(
                                                                "Verifica√ß√£o de identidade e Know Your Customer"),
                                                new Tag().name("‚öôÔ∏è System Control")
                                                                .description("Controle administrativo e operacional"),
                                                new Tag().name("üìä Metrics & Monitoring")
                                                                .description("M√©tricas, status e monitoramento"),
                                                new Tag().name("üîó Wallet Operations")
                                                                .description("Opera√ß√µes com carteiras blockchain"),
                                                new Tag().name("üìù Transaction Management")
                                                                .description("Gest√£o e monitoramento de transa√ß√µes")))
                                .components(new Components()
                                                .addSecuritySchemes("adminKey", new SecurityScheme()
                                                                .type(SecurityScheme.Type.APIKEY)
                                                                .in(SecurityScheme.In.HEADER)
                                                                .name("X-Admin-Key")
                                                                .description("Chave administrativa para opera√ß√µes sens√≠veis")))
                                .addSecurityItem(new SecurityRequirement().addList("adminKey"));
        }
}
